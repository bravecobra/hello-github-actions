name: Docker Image CI/CD

on: push # [push, pull_request]

jobs:
  benchmark:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v1
    - name: benchmarks the go code
      run: make benchmark

  test:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v1
    - name: tests the code
      run: make test

  build-and-dockerhub-push:
    needs: [benchmark, test]
    strategy:
      fail-fast: false
      matrix:
        os: [macOS-10.14, ubuntu-18.04]
        goos: [linux, darwin]
        exclude:
          - os: macOS-10.14
            goos: linux
          - os: ubuntu-18.04
            goos: darwin
    runs-on: ${{ matrix.os }}
    steps:

    # https://help.github.com/en/articles/contexts-and-expression-syntax-for-github-actions#example-printing-context-information-to-the-log-file @ 2019 08 18
    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"
    - name: Dump strategy context
      env:
        STRATEGY_CONTEXT: ${{ toJson(strategy) }}
      run: echo "$STRATEGY_CONTEXT"
    - name: Dump matrix context
      env:
        MATRIX_CONTEXT: ${{ toJson(matrix) }}
      run: echo "$MATRIX_CONTEXT"
    - name: Dump job context
      env:
        JOB_CONTEXT: ${{ toJson(job) }}
      run: echo "$JOB_CONTEXT"
    - name: Dump runner context
      env:
        RUNNER_CONTEXT: ${{ toJson(runner) }}
      run: echo "$RUNNER_CONTEXT"
    - name: Dump steps context
      env:
        STEPS_CONTEXT: ${{ toJson(steps) }}
      run: echo "$STEPS_CONTEXT"

    - uses: actions/checkout@v1
    - name: builds the binary
      #run: CGO_ENABLED=0 GOOS=${GOOS} ${GOBUILD} -a -installsuffix cgo -ldflags '-w -extldflags "-static"' -o ${BINARY_NAME} .
      run: CGO_ENABLED=0 GOOS=${{ matrix.goos }} ${GOBUILD} -a -installsuffix cgo -ldflags '-w -extldflags "-static"' -o ${BINARY_NAME}${{ matrix.os }}${{ matrix.goos }} .
      env:
        GOOS: linux # darwin
        GOBUILD: go build
        BINARY_NAME: hello_world

    #if: matrix.os == 'ubuntu-18.04'
    # build docker image
    - uses: actions/docker/login@master
    #- name: builds the docker image
      if: matrix.os == 'ubuntu-18.04'
      env:
        ARGS: "build -t lotharschulz/hello-github-actions:${{ github.sha }} ."

    # push docker image to dockerhub
    - uses: actions/docker/login@master
    #- name: push docker to dockerhub
      if: matrix.os == 'ubuntu-18.04'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        ARGS: "push lotharschulz/hello-github-actions:${{ github.sha }}"

#  dockerhub-login:
#   needs: build
#    runs-on: ubuntu-18.04
#    steps:
#    - uses: actions/docker/login@master
#      env:
#        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
#        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

#  dockerhub-push:
#    needs: dockerhub-login
 
#    runs-on: ubuntu-18.04
#    steps:
#    - uses: actions/docker/login@master
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
#        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
#        ARGS: "push lotharschulz/hello-github-actions:${{ github.sha }}"
